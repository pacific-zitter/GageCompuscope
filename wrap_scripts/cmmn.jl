# Automatically generated using Clang.jl


# Skipping MacroDefinition: CsBeep ( x , y ) Beep ( ( x ) , ( y ) )

const CS_MODE_SINGLE = 0x01
const CS_MODE_DUAL = 0x02
const CS_MODE_QUAD = 0x04
const CS_MODE_OCT = 0x08
const CS_MASKED_MODE = Float32(0x00000000)
const CS_MODE_RESERVED = 0x10
const CS_MODE_EXPERT_HISTOGRAM = 0x20
const CS_MODE_SINGLE_CHANNEL2 = 0x40
const CS_MODE_POWER_ON = 0x80
const CS_MODE_REFERENCE_CLK = 0x0400
const CS_MODE_CS3200_CLK_INVERT = 0x0800
const TIMESTAMP_GCLK = 0x00
const TIMESTAMP_FREERUN = 0x10
const TIMESTAMP_DEFAULT = TIMESTAMP_GCLK | TIMESTAMP_FREERUN
const TIMESTAMP_MCLK = 0x01
const TIMESTAMP_SEG_RESET = 0x00
const TxMODE_DATA_ANALOGONLY = 0x00
const TxMODE_DEFAULT = TxMODE_DATA_ANALOGONLY
const TxMODE_SLAVE = 0x80000000
const TxMODE_MULTISEGMENTS = 0x40000000
const TxMODE_DATA_FLOAT = 0x01
const TxMODE_TIMESTAMP = 0x02
const TxMODE_DATA_16 = 0x04
const TxMODE_DATA_ONLYDIGITAL = 0x08
const TxMODE_DATA_32 = 0x10
const TxMODE_DATA_FFT = 0x30
const TxMODE_DATA_INTERLEAVED = 0x40
const TxMODE_SEGMENT_TAIL = 0x80
const TxMODE_HISTOGRAM = 0x0100
const TxMODE_DATA_64 = 0x0200
const TxMODE_DEBUG_DISP = 0x10000000
const TxFORMAT_OCTAL_INTERLEAVED = 0x12345678
const TxFORMAT_QUAD_INTERLEAVED = 0x11223344
const TxFORMAT_COBRA_DUAL_INTERLEAVED = 0x11112222
const TxFORMAT_DUAL_INTERLEAVED = 0x11221122
const TxFORMAT_NON_INTERLEAVED = 0x11111111
const TxFORMAT_SINGLE = 0x11111111
const TxFORMAT_STACKED = Float32(0x07ffffff)
const CS_CHAN_1 = 1
const CS_CHAN_2 = 2
const CS_FILTER_OFF = 0
const CS_FILTER_ON = 1
const CS_COUPLING_DC = 0x01
const CS_COUPLING_AC = 0x02
const CS_COUPLING_MASK = 0x03
const CS_DIFFERENTIAL_INPUT = 0x04
const CS_DIRECT_ADC_INPUT = 0x08
const CS_REAL_IMP_1M_OHM = 1000000
const CS_REAL_IMP_50_OHM = 50
const CS_REAL_IMP_1K_OHM = 1000
const CS_GAIN_100_V = 100000
const CS_GAIN_40_V = 40000
const CS_GAIN_20_V = 20000
const CS_GAIN_10_V = 10000
const CS_GAIN_8_V = 8000
const CS_GAIN_5_V = 5000
const CS_GAIN_4_V = 4000
const CS_GAIN_3_V = 3000
const CS_GAIN_2_V = 2000
const CS_GAIN_1_V = 1000
const CS_GAIN_800_MV = 800
const CS_GAIN_500_MV = 500
const CS_GAIN_400_MV = 400
const CS_GAIN_200_MV = 200
const CS_GAIN_100_MV = 100
const CS_GAIN_50_MV = 50
const CS_GAIN_CMOS = 2500
const CS_GAIN_TTL = 1500
const CS_GAIN_PECL = 3000
const CS_GAIN_LVDS = 0
const CS_GAIN_ECL = -2000
const CS_TRIG_COND_NEG_SLOPE = 0
const CS_TRIG_COND_POS_SLOPE = 1
const CS_TRIG_COND_PULSE_WIDTH = 2
const CS_MAX_TRIG_COND = 3
const CS_RELATION_OR = 0
const CS_RELATION_AND = 1
const CS_EVENT1 = 2
const CS_EVENT2 = 3
const CS_TRIG_ENGINES_DIS = 0
const CS_TRIG_ENGINES_EN = 1
const CS_TRIG_SOURCE_DISABLE = 0
const CS_TRIG_SOURCE_CHAN_1 = 1
const CS_TRIG_SOURCE_CHAN_2 = 2
const CS_TRIG_SOURCE_EXT = -1
const CS_BOARD_INFO = 1
const CS_SYSTEM = 3
const CS_CHANNEL = 4
const CS_TRIGGER = 5
const CS_ACQUISITION = 6
const CS_PARAMS = 7
const CS_FIR_CONFIG = 8
const CS_EXTENDED_BOARD_OPTIONS = 9
const CS_TIMESTAMP_TICKFREQUENCY = 10
const CS_CHANNEL_ARRAY = 11
const CS_TRIGGER_ARRAY = 12
const CS_SMT_ENVELOPE_CONFIG = 13
const CS_SMT_HISTOGRAM_CONFIG = 14
const CS_FFT_CONFIG = 15
const CS_FFTWINDOW_CONFIG = 16
const CS_MULREC_AVG_COUNT = 17
const CS_TRIG_OUT_CFG = 18
const CS_GET_SEGMENT_COUNT = 19
const CS_ONE_SAMPLE_DEPTH_RESOLUTION = 20
const CS_TRIGGERED_INFO = 200
const CS_SEGMENTTAIL_SIZE_BYTES = 201
const CS_STREAM_SEGMENTDATA_SIZE_SAMPLES = 202
const CS_STREAM_TOTALDATA_SIZE_BYTES = 203
const CS_IDENTIFY_LED = 204
const CS_CAPTURE_MODE = 205
const CS_DATAPACKING_MODE = 206
const CS_GET_DATAFORMAT_INFO = 207
const CS_CURRENT_CONFIGURATION = 1
const CS_ACQUISITION_CONFIGURATION = 2
const CS_ACQUIRED_CONFIGURATION = 3
const ACTION_COMMIT = 1
const ACTION_START = 2
const ACTION_FORCE = 3
const ACTION_ABORT = 4
const ACTION_CALIB = 5
const ACTION_RESET = 6
const ACTION_COMMIT_COERCE = 7
const ACTION_TIMESTAMP_RESET = 8
const ACTION_HISTOGRAM_RESET = 9
const ACTION_ENCODER1_COUNT_RESET = 10
const ACTION_ENCODER2_COUNT_RESET = 11
const ACTION_HARD_RESET = 12
const ACQ_STATUS_READY = 0
const ACQ_STATUS_WAIT_TRIGGER = 1
const ACQ_STATUS_TRIGGERED = 2
const ACQ_STATUS_BUSY_TX = 3
const ACQ_STATUS_BUSY_CALIB = 4
const CSDEMO8_BOARDTYPE = 0x0801
const CSDEMO12_BOARDTYPE = 0x0802
const CSDEMO14_BOARDTYPE = 0x0803
const CSDEMO16_BOARDTYPE = 0x0804
const CSDEMO32_BOARDTYPE = 0x0805
const CSDEMO_BT_MASK = 0x0800
const CSDEMO_BT_FIRST_BOARD = CSDEMO8_BOARDTYPE
const CSDEMO_BT_LAST_BOARD = CSDEMO32_BOARDTYPE
const CS8500_BOARDTYPE = 0x01
const CS82G_BOARDTYPE = 0x02
const CS12100_BOARDTYPE = 0x03
const CS1250_BOARDTYPE = 0x04
const CS1220_BOARDTYPE = 0x05
const CS1210_BOARDTYPE = 0x06
const CS14100_BOARDTYPE = 0x07
const CS1450_BOARDTYPE = 0x08
const CS1610_BOARDTYPE = 0x09
const CS1602_BOARDTYPE = 0x0a
const CS3200_BOARDTYPE = 0x0b
const CS85G_BOARDTYPE = 0x0c
const CS14200_BOARDTYPE = 0x0d
const CS14105_BOARDTYPE = 0x0e
const CS12400_BOARDTYPE = "loat32(0x"
const CS14200v2_BOARDTYPE = 0x10
const SNA142_BOARDTYPE = 0x11
const CS_COMBINE_FIRST_BOARD = CS14200_BOARDTYPE
const CS_COMBINE_LAST_BOARD = SNA142_BOARDTYPE
const CSPCIEx_BOARDTYPE = 0x2000
const CSNUCLEONBASE_BOARDTYPE = CSPCIEx_BOARDTYPE
const CS16x1_BOARDTYPE = 0x20
const CS16x2_BOARDTYPE = 0x21
const CS14x1_BOARDTYPE = 0x22
const CS14x2_BOARDTYPE = 0x23
const CS12x1_BOARDTYPE = 0x24
const CS12x2_BOARDTYPE = 0x25
const CS16xyy_BT_FIRST_BOARD = CS16x1_BOARDTYPE
const CS16xyy_LAST_BOARD = CS12x2_BOARDTYPE
const CS16xyy_BASEBOARD = CS16x1_BOARDTYPE
const CSE42x0_BOARDTYPE = 0x30 | CSPCIEx_BOARDTYPE
const CSE42x2_BOARDTYPE = 0x31 | CSPCIEx_BOARDTYPE
const CSE42x4_BOARDTYPE = 0x32 | CSPCIEx_BOARDTYPE
const CSE42x7_BOARDTYPE = 0x33 | CSPCIEx_BOARDTYPE
const CSE43x0_BOARDTYPE = 0x34 | CSPCIEx_BOARDTYPE
const CSE43x2_BOARDTYPE = 0x35 | CSPCIEx_BOARDTYPE
const CSE43x4_BOARDTYPE = 0x36 | CSPCIEx_BOARDTYPE
const CSE43x7_BOARDTYPE = 0x37 | CSPCIEx_BOARDTYPE
const CSE44x0_BOARDTYPE = 0x38 | CSPCIEx_BOARDTYPE
const CSE44x2_BOARDTYPE = 0x39 | CSPCIEx_BOARDTYPE
const CSE44x4_BOARDTYPE = 0x3a | CSPCIEx_BOARDTYPE
const CSE44x7_BOARDTYPE = 0x3b | CSPCIEx_BOARDTYPE
const CSE4abc_FIRST_BOARD = CSE42x0_BOARDTYPE
const CSE4abc_LAST_BOARD = CSE44x7_BOARDTYPE
const CSE4abc_BASEBOARD = CSE42x0_BOARDTYPE
const CS8220_BOARDTYPE = 0x40
const CS8221_BOARDTYPE = 0x41
const CS8222_BOARDTYPE = 0x42
const CS8223_BOARDTYPE = 0x43
const CS8224_BOARDTYPE = 0x44
const CS8225_BOARDTYPE = 0x45
const CS8226_BOARDTYPE = 0x46
const CS8227_BOARDTYPE = 0x47
const CS8228_BOARDTYPE = 0x48
const CS8229_BOARDTYPE = 0x49
const CS822x_BOARDTYPE_MASK = 0x40
const CS8240_BOARDTYPE = 0x50
const CS8241_BOARDTYPE = 0x51
const CS8242_BOARDTYPE = 0x52
const CS8243_BOARDTYPE = 0x53
const CS8244_BOARDTYPE = 0x54
const CS8245_BOARDTYPE = 0x55
const CS8246_BOARDTYPE = 0x56
const CS8247_BOARDTYPE = 0x57
const CS8248_BOARDTYPE = 0x58
const CS8249_BOARDTYPE = 0x59
const CS824x_BOARDTYPE_MASK = 0x50
const CS8280_BOARDTYPE = 0x60
const CS8281_BOARDTYPE = 0x61
const CS8282_BOARDTYPE = 0x62
const CS8283_BOARDTYPE = 0x63
const CS8284_BOARDTYPE = 0x64
const CS8285_BOARDTYPE = 0x65
const CS8286_BOARDTYPE = 0x66
const CS8287_BOARDTYPE = 0x67
const CS8288_BOARDTYPE = 0x68
const CS8289_BOARDTYPE = 0x69
const CS828x_BOARDTYPE_MASK = 0x60
const CS8320_BOARDTYPE = 0x80
const CS8321_BOARDTYPE = 0x81
const CS8322_BOARDTYPE = 0x82
const CS8323_BOARDTYPE = 0x83
const CS8324_BOARDTYPE = 0x84
const CS8325_BOARDTYPE = 0x85
const CS8326_BOARDTYPE = 0x86
const CS8327_BOARDTYPE = 0x87
const CS8328_BOARDTYPE = 0x88
const CS8329_BOARDTYPE = 0x89
const CS832x_BOARDTYPE_MASK = 0x80
const CS8340_BOARDTYPE = 0x90
const CS8341_BOARDTYPE = 0x91
const CS8342_BOARDTYPE = 0x92
const CS8343_BOARDTYPE = 0x93
const CS8344_BOARDTYPE = 0x94
const CS8345_BOARDTYPE = 0x95
const CS8346_BOARDTYPE = 0x96
const CS8347_BOARDTYPE = 0x97
const CS8348_BOARDTYPE = 0x98
const CS8349_BOARDTYPE = 0x99
const CS834x_BOARDTYPE_MASK = 0x90
const CS8380_BOARDTYPE = 0xa0
const CS8381_BOARDTYPE = 0xa1
const CS8382_BOARDTYPE = 0xa2
const CS8383_BOARDTYPE = 0xa3
const CS8384_BOARDTYPE = 0xa4
const CS8385_BOARDTYPE = 0xa5
const CS8386_BOARDTYPE = 0xa6
const CS8387_BOARDTYPE = 0xa7
const CS8388_BOARDTYPE = 0xa8
const CS8389_BOARDTYPE = 0xa9
const CS838x_BOARDTYPE_MASK = 0xa0
const CS8210_BOARDTYPE = 0xb0
const CS8211_BOARDTYPE = 0xb1
const CS8212_BOARDTYPE = 0xb2
const CS8213_BOARDTYPE = 0xb3
const CS8214_BOARDTYPE = 0xb4
const CS8215_BOARDTYPE = 0xb5
const CS8216_BOARDTYPE = 0xb6
const CS8217_BOARDTYPE = 0xb7
const CS8218_BOARDTYPE = 0xb8
const CS8219_BOARDTYPE = 0xb9
const CS821x_BOARDTYPE_MASK = 0xb0
const CS8310_BOARDTYPE = 0xc0
const CS8311_BOARDTYPE = 0xc1
const CS8312_BOARDTYPE = 0xc2
const CS8313_BOARDTYPE = 0xc3
const CS8314_BOARDTYPE = 0xc4
const CS8315_BOARDTYPE = 0xc5
const CS8316_BOARDTYPE = 0xc6
const CS8317_BOARDTYPE = 0xc7
const CS8318_BOARDTYPE = 0xc8
const CS8319_BOARDTYPE = 0xc9
const CS831x_BOARDTYPE_MASK = 0xc0
const CS8410_BOARDTYPE = 0xd0
const CS8412_BOARDTYPE = 0xd2
const CS8420_BOARDTYPE = 0xd4
const CS8422_BOARDTYPE = 0xd6
const CS8440_BOARDTYPE = 0xd8
const CS8442_BOARDTYPE = 0xda
const CS8480_BOARDTYPE = 0xdc
const CS8482_BOARDTYPE = 0xde
const CS84xx_BOARDTYPE_MASK = 0xd0
const CS8_BT_MASK = 0xd0
const CS8_BT_FIRST_BOARD = CS8220_BOARDTYPE
const CS8_BT_LAST_BOARD = CS8482_BOARDTYPE
const CS8xxx_BASEBOARD = CS8_BT_FIRST_BOARD
const CS_ZAP_FIRST_BOARD = CS8410_BOARDTYPE
const CS_ZAP_LAST_BOARD = CS8482_BOARDTYPE
const CS_ZAP_BASEBOARD = CS_ZAP_FIRST_BOARD
const CSxyG8_BOARDTYPE_MASK = 0x0100
const CS22G8_BOARDTYPE = 0x0100
const CS21G8_BOARDTYPE = 0x0101
const CS11G8_BOARDTYPE = 0x0102
const LAB11G_BOARDTYPE = 0x0103
const CSxyG8_FIRST_BOARD = CS22G8_BOARDTYPE
const CSxyG8_LAST_BOARD = LAB11G_BOARDTYPE
const CS_BASE8_BOARDTYPE = 0x0400
const CS_COBRAX_BOARDTYPE_MASK = 0x0480
const CSX11G8_BOARDTYPE = 0x0481
const CSX21G8_BOARDTYPE = 0x0482
const CSX22G8_BOARDTYPE = 0x0483
const CSX13G8_BOARDTYPE = 0x0484
const CSX23G8_BOARDTYPE = 0x0485
const CSX14G8_BOARDTYPE = 0x0486
const CSX_NTS_BOARDTYPE = 0x0487
const CSX24G8_BOARDTYPE = 0x0488
const CSEcdG8_FIRST_BOARD = CSX14G8_BOARDTYPE
const CSEcdG8_LAST_BOARD = CSX24G8_BOARDTYPE
const CS12500_BOARDTYPE = 0x0500
const CS121G_BOARDTYPE = 0x0501
const CS122G_BOARDTYPE = 0x0502
const CS14250_BOARDTYPE = 0x0510
const CS14500_BOARDTYPE = 0x0511
const CS141G_BOARDTYPE = 0x0512
const CSJD_FIRST_BOARD = CS12500_BOARDTYPE
const CSJD_LAST_BOARD = CS141G_BOARDTYPE
const CSUSB_BOARDTYPE = 0x1001
const CSUSB_BT_FIRST_BOARD = CSUSB_BOARDTYPE
const CSUSB_BT_LAST_BOARD = CSUSB_BOARDTYPE
const CSDECADE123G_BOARDTYPE = 0x0600
const CSDECADE126G_BOARDTYPE = 0x0601
const CSDECADE_FIRST_BOARD = CSDECADE123G_BOARDTYPE
const CSDECADE_LAST_BOARD = CSDECADE126G_BOARDTYPE
const CSHEXAGON_161G4_BOARDTYPE = 0x0701
const CSHEXAGON_161G2_BOARDTYPE = 0x0702
const CSHEXAGON_16504_BOARDTYPE = 0x0703
const CSHEXAGON_16502_BOARDTYPE = 0x0704
const CSHEXAGON_PXI_BOARDTYPE_MASK = 0x0080
const CSHEXAGON_LOWRANGE_BOARDTYPE_MASK = 0x0040
const CSHEXAGON_X161G4_BOARDTYPE = CSHEXAGON_PXI_BOARDTYPE_MASK | CSHEXAGON_161G4_BOARDTYPE
const CSHEXAGON_X161G2_BOARDTYPE = CSHEXAGON_PXI_BOARDTYPE_MASK | CSHEXAGON_161G2_BOARDTYPE
const CSHEXAGON_X16504_BOARDTYPE = CSHEXAGON_PXI_BOARDTYPE_MASK | CSHEXAGON_16504_BOARDTYPE
const CSHEXAGON_X16502_BOARDTYPE = CSHEXAGON_PXI_BOARDTYPE_MASK | CSHEXAGON_16502_BOARDTYPE
const CSHEXAGON_FIRST_BOARD = CSHEXAGON_161G4_BOARDTYPE
const CSHEXAGON_LAST_BOARD = CSHEXAGON_X16502_BOARDTYPE
const CSDAGGER_50216_BOARDTYPE = 0x0901
const CSDAGGER_25216_BOARDTYPE = 0x0902
const CSDAGGER_FIRST_BOARD = CSDAGGER_50216_BOARDTYPE
const CSDAGGER_LAST_BOARD = CSDAGGER_25216_BOARDTYPE
const PLX_BASED_BOARDTYPE = 0x4000
const CPCI_BOARDTYPE = 0x8000
const CS1610C_BOARDTYPE = CPCI_BOARDTYPE | CS1610_BOARDTYPE
const CS14100C_BOARDTYPE = CPCI_BOARDTYPE | CS14100_BOARDTYPE
const CS82GC_BOARDTYPE = CPCI_BOARDTYPE | CS82G_BOARDTYPE
const CS85GC_BOARDTYPE = CPCI_BOARDTYPE | CS85G_BOARDTYPE
const CS3200C_BOARDTYPE = CPCI_BOARDTYPE | CS3200_BOARDTYPE
const FCI_BOARDTYPE = 0x00010000
const CS_TIMEOUT_DISABLE = -1
const ACQ_EVENT_TRIGGERED = 0
const ACQ_EVENT_END_BUSY = 1
const ACQ_EVENT_END_TXFER = 2
const ACQ_EVENT_ALARM = 3
const NUMBER_ACQ_EVENTS = 4
const CAPS_SAMPLE_RATES = 0x00010000
const CAPS_INPUT_RANGES = 0x00020000
const CAPS_IMPEDANCES = 0x00030000
const CAPS_COUPLINGS = 0x00040000
const CAPS_ACQ_MODES = 0x00050000
const CAPS_TERMINATIONS = 0x00060000
const CAPS_FLEXIBLE_TRIGGER = 0x00070000
const CAPS_BOARD_TRIGGER_ENGINES = 0x00080000
const CAPS_TRIGGER_SOURCES = 0x00090000
const CAPS_FILTERS = 0x000a0000
const CAPS_MAX_SEGMENT_PADDING = 0x000b0000
const CAPS_DC_OFFSET_ADJUST = 0x000c0000
const CAPS_CLK_IN = 0x000d0000
const CAPS_BOOTIMAGE0 = 0x000e0000
const CAPS_AUX_CONFIG = 0x000f0000
const CAPS_CLOCK_OUT = 0x00100000
const CAPS_TRIG_OUT = 0x00110000
const CAPS_TRIG_ENABLE = 0x00120000
const CAPS_AUX_OUT = 0x00130000
const CAPS_AUX_IN_TIMESTAMP = 0x00140000
const CAPS_FWCHANGE_REBOOT = 0x00150000
const CAPS_EXT_TRIGGER_UNIPOLAR = 0x00160000
const CAPS_TRIG_ENGINES_PER_CHAN = 0x00200000
const CAPS_MULREC = 0x00400000
const CAPS_TRIGGER_RES = 0x00410000
const CAPS_MIN_EXT_RATE = 0x00420000
const CAPS_SKIP_COUNT = 0x00430000
const CAPS_MAX_EXT_RATE = 0x00440000
const CAPS_TRANSFER_EX = 0x00450000
const CAPS_STM_TRANSFER_SIZE_BOUNDARY = 0x00460000
const CAPS_STM_MAX_SEGMENTSIZE = 0x00470000
const CAPS_SINGLE_CHANNEL2 = 0x00480000
const CAPS_SELF_IDENTIFY = 0x00490000
const CAPS_MAX_PRE_TRIGGER = 0x004a0000
const CAPS_DEPTH_INCREMENT = 0x004b0000
const CAPS_TRIGGER_DELAY_INCREMENT = 0x004c0000
const CS_NO_FILTER = Float32(0x0fffffff)
const CS_NO_EXTTRIG = Float32(0x0fffffff)
const CS_MODE_NO_DDC = 0x00
const CS_DDC_MODE_ENABLE = 0x01
const CS_DDC_MODE_CH1 = 0x01
const CS_DDC_MODE_CH2 = 0x02
const CS_DDC_DEBUG_MUX = 0x03
const CS_DDC_DEBUG_NCO = 0x04
const CS_DDC_MODE_LAST = 0x04
const CS_DDC_MUX_ENABLE = 0x02
const CS_DDC_CORE_CONFIG = 300
const CS_DDC_FIR_COEF_CONFIG = 301
const CS_DDC_CFIR_COEF_CONFIG = 302
const CS_DDC_PFIR_COEF_CONFIG = 303
const CS_DDC_WRITE_FIFO_DATA = 305
const CS_DDC_READ_FIFO_DATA = 306
const SIZE_OF_FIR_COEFS = 96
const SIZE_OF_CFIR_COEFS = 21
const SIZE_OF_PFIR_COEFS = 63
const DDC_FILTER_COEFS_MAX_SIZE = SIZE_OF_FIR_COEFS + SIZE_OF_CFIR_COEFS + SIZE_OF_PFIR_COEFS
const DDC_CORE_CONFIG_OFFSET = DDC_FILTER_COEFS_MAX_SIZE
const CS_DDC_CONFIG = 400
const CS_DDC_SEND_CMD = 401
const CS_DDC_SCALE_OVERFLOW_STATUS = 402
const CS_PE_ENABLE = 1
const CS_PE_DISABLE = 0
const CS_ENCODER1_COUNT_RESET = 300
const CS_ENCODER2_COUNT_RESET = 301
const CS_ENCODER1_CONFIG = 302
const CS_ENCODER2_CONFIG = 303
const CS_ENCODER1_COUNT = 304
const CS_ENCODER2_COUNT = 305
const CS_PE_INPUT_TYPE_STEPANDDIRECTION = 0
const CS_PE_INPUT_TYPE_QUADRATURE = 1
const CS_PE_ENCODER_MODE_STAMP = 0
const CS_PE_ENCODER_MODE_TOP = 1
const CS_OCT_ENABLE = 1
const CS_OCT_DISABLE = 0
const CS_OCT_MODE0 = 0
const CS_OCT_MODE1 = 1
const CS_OCT_CORE_CONFIG = 330
const CS_OCT_RECORD_LEN = 331
const CS_OCT_CMD_MODE = 332

# Skipping MacroDefinition: CS_FAILED ( x ) ( ( x ) < 0 ? TRUE : FALSE )
# Skipping MacroDefinition: CS_SUCCEEDED ( x ) ( ( x ) < 0 ? FALSE : TRUE )

const CS_ERROR_FORMAT_THRESHOLD = 0x00010000
const CS_FALSE = 0
const CS_SUCCESS = 1
const CS_CONFIG_CHANGED = 2
const CS_ASYNC_SUCCESS = 3
const CS_SEGMENTINFO_EMPTY = 4
const CS_STRUCTURE_PADDED = 5
const CS_STRUCTURE_TRUNCATED = 6
const CS_NOT_INITIALIZED = -1
const CS_UNABLE_CREATE_RM = -3
const CS_INTERFACE_NOT_FOUND = -4
const CS_HANDLE_IN_USE = -5
const CS_INVALID_HANDLE = -6
const CS_INVALID_REQUEST = -7
const CS_NO_SYSTEMS_FOUND = -8
const CS_MEMORY_ERROR = -9
const CS_LOCK_SYSTEM_FAILED = -10
const CS_INVALID_STRUCT_SIZE = -11
const CS_INVALID_STATE = -12
const CS_INVALID_EVENT = -13
const CS_INVALID_SHARED_REGION = -14
const CS_INVALID_FILENAME = -15
const CS_SHARED_MAP_UNAVAILABLE = -16
const CS_INVALID_START = -17
const CS_INVALID_LENGTH = -18
const CS_SOCKET_NOT_FOUND = -19
const CS_SOCKET_ERROR = -20
const CS_NO_AVAILABLE_SYSTEM = -21
const CS_NULL_POINTER = -22
const CS_INVALID_CHANNEL = -23
const CS_INVALID_TRIGGER = -24
const CS_INVALID_EVENT_TYPE = -25
const CS_BUFFER_TOO_SMALL = -26
const CS_INVALID_PARAMETER = -27
const CS_INVALID_SAMPLE_RATE = -28
const CS_NO_EXT_CLK = -29
const CS_SEG_COUNT_TOO_BIG = -30
const CS_INVALID_SEGMENT_SIZE = -31
const CS_DEPTH_SIZE_TOO_BIG = -32
const CS_INVALID_CAL_MODE = -33
const CS_INVALID_TRIG_COND = -34
const CS_INVALID_TRIG_LEVEL = -35
const CS_INVALID_TRIG_SOURCE = -36
const CS_INVALID_EXT_TRIG = -37
const CS_INVALID_ACQ_MODE = -38
const CS_INVALID_IMPEDANCE = -39
const CS_INVALID_GAIN = -40
const CS_INVALID_COUPLING = -41
const CS_BUFFER_NOT_ALIGNED = -42
const CS_PRETRIG_DEPTH_TOO_BIG = -43
const CS_INVALID_TRIG_DEPTH = -44
const CS_FUNCTION_NOT_SUPPORTED = -45
const CS_HARDWARE_TIMEOUT = -46
const CS_INVALID_PARAMS_ID = -47
const CS_INVALID_POINTER_BUFFER = -48
const CS_CANNOT_LOCKDOWN_BUFFER = -49
const CS_DRIVER_ASYNC_REQUEST_BUSY = -50
const CS_INVALID_CHANNEL_COUNT = -51
const CS_INVALID_TRIGGER_COUNT = -52
const CS_INVALID_SEGMENT = -53
const CS_INVALID_SEGMENT_COUNT = -54
const CS_INVALID_CAPS_ID = -55
const CS_HANDLE_NOT_IN_USE = -56
const CS_INSUFFICIENT_RESOURCES = -57
const CS_INVALID_TRANSFER_MODE = -58
const CS_DRIVER_ASYNC_NOT_SUPPORTED = -59
const CS_INVALID_TRIGGER_ENABLED = -60
const CS_NOT_TRIGGER_FROM_SAME_CARD = -61
const CS_INVALID_PRETRIGGER_DEPTH = -62
const CS_INVALID_FW_VERSION = -63
const CS_INVALID_TRIGHOLDOFF = -64
const CS_INVALID_TRIGDELAY = -65
const CS_INVALID_STREAMING_BUFFER = -66
const CS_HW_FIFO_OVERFLOW = -67
const CS_INVALID_CARD = -68
const CS_INVALID_TOKEN = -69
const CS_MASTERSLAVE_DISCREPANCY = -70
const CS_INVALID_FIR_MULTIPLIER = -71
const CS_MINMAXDETECTQUEUE_INVALID = -72
const CS_ALLTRIGGERENGINES_USED = -73
const CS_MULREC_RAWDATA_TOOBIG = -74
const CS_INVALID_FILTER = -75
const CS_INVALID_POSITION = -76
const CS_EXT_CLK_OUT_OF_RANGE = -77
const CS_EXT_CLK_NOT_PRESENT = -78
const CS_RE_INIT_FAILED = -79
const CS_CHANNEL_PROTECT_FAULT = -80
const CS_INVALID_NUM_OF_AVERAGE = -81
const CS_INVALID_TIMESTAMP_CLOCK = -82
const CS_ASYNCTRANSFER_ABORTED = -83
const CS_STREAM_ERROR_CIRCULAR_BUFFER = -84
const CS_STREAM_ERROR_CREATEFILE = -85
const CS_STREAM_ERROR_WRITEFILE = -86
const CS_TRANSFER_DATA_TIMEOUT = -87
const CS_DEVIOCTL_ERROR = -88
const CS_OVERLAPPED_ERROR = -89
const CS_CREATEEVENT_ERROR = -90
const CS_FLASHSTATE_ERROR = -91
const CS_FLASH_SECTORCROSS_ERROR = -92
const CS_FLASH_SECTORERASE_ERROR = -93
const CS_FLASH_INVALID_SECTOR = -94
const CS_FLASH_DATAREAD_ERROR = -95
const CS_FLASH_DATAWRITE_ERROR = -96
const CS_SYSTEM_NOT_INITIALIZED = -97
const CS_POWERSTATE_ERROR = -98
const CS_SEGMENTSIZE_TOO_BIG = -99
const CS_INVALID_FRM_CMD = -100
const CS_FRM_NO_RESPONSE = -101
const CS_INVALID_DAC_ADDR = -102
const CS_INVALID_EDGE = -103
const CS_INVALID_SELF_TEST = -104
const CS_NIOS_FAILED = -105
const CS_NO_INTERRUPT = -106
const CS_ADDONINIT_ERROR = -107
const CS_INVALID_ADC_ADDR = -108
const CS_ADC_ACCESS_ERROR = -109
const CS_FLASH_TIMEOUT = -110
const CS_FLASH_BUFFER_BOUNDARY_ERROR = -111
const CS_FLASH_BUFFER_SIZE_ERROR = -112
const CS_FLASH_ADDRESS_ERROR = -113
const CS_FLASH_ERASESECTOR_ERROR = -114
const CS_INVALID_EXTCLK_SAMPLESKIP = -115
const CS_INVALID_CARD_COUNT = -120
const CS_DAC_CALIB_FAILURE = -200
const CS_CAL_BUSY_TIMEOUT = -201
const CS_TIMING_CAL_FAILED = -202
const CS_COARSE_OFFSET_CAL_FAILED = -203
const CS_FINE_OFFSET_CAL_FAILED = -204
const CS_GAIN_CAL_FAILED = -205
const CS_POSITION_CAL_FAILED = -206
const CS_CALIB_DAC_OUT_OF_RANGE = -207
const CS_CALIB_ADC_CAPTURE_FAILURE = -208
const CS_CALIB_MEAS_ADC_FAILURE = -209
const CS_CALIB_ADC_READ_FAILURE = -210
const CS_CHANNELS_NOTCALIBRATED = -211
const CS_MASTERSLAVE_CALIB_FAILURE = -212
const CS_EXTTRIG_CALIB_FAILURE = -213
const CS_INVALID_DACCALIBTABLE = -214
const CS_ADCALIGN_CALIB_FAILURE = -215
const CS_CALIB_REF_FAILURE = -216
const CS_FAST_CALIB_FAILURE = -217
const CS_ADC_DPA_FAILURE = -218
const CS_EXT_TRIG_DPA_FAILURE = -219
const CS_CLK_NOT_LOCKED = -220
const CS_INVALID_CALIB_BUFFER = -221
const CS_NULL_OFFSET_CAL_FAILED = -222
const CS_ADC_SKEW_CAL_FAILED = -223
const CS_ADC_PHASE_CAL_FAILED = -224
const CS_ACCAL_NOT_LOCKED = -225
const CS_LVDS_ALIGNMENT_FAILED = -226
const CS_OFFSET_ADJUST_FAILED = -227
const CS_ADC_IQ_GAIN_CALIB_FAILED = -228
const CS_ADC_IQ_OFFSET_CALIB_FAILED = -229
const CS_DC_LEVEL_FREEZE_FAILED = -230
const CS_GAIN_CROSS_CHECK_FAILED = -231
const CS_CAPTURE_CALIBPULSE_TIMEOUT = -232
const CS_CALIBPULSE_NOT_DETECTED = -233
const CS_CALIBPULSE_INVALID = -234
const CS_TAO_OUT_OF_RANGE = -235
const CS_NVRAM_NOT_INIT = -300
const CS_FLASH_NOT_INIT = -301
const CS_EEPROM_NOT_INIT = -302
const CS_ADDON_NOT_CONNECTED = -303
const CS_MS_BRIDGE_FAILED = -304
const CS_GIO_DETECT_FAILED = -305
const CS_ADDON_FPGA_LOAD_FAILED = -306
const CS_EEPROM_WRITE_TIMEOUT = -307
const CS_CSI_FILE_ERROR = -407
const CS_INVALID_DIRECTORY = -408
const CS_DISK_STREAM_NOT_INITIALIZED = -409
const CS_INVALID_DISK_STREAM_ACQ_COUNT = -410
const CS_INVALID_SIG_HEADER = -411
const CS_FWUPDATED_SHUTDOWN_REQUIRED = -412
const CS_INVALID_DATAPACKING = -413
const CS_INVALID_DATA8_TRIG_DEPTH = -414
const CS_INVALID_DATA8_SEGMENT_SIZE = -415
const CS_OPEN_FILE_ERROR = -416
const CS_STM_TRANSFER_ABORTED = -800
const CS_STM_FIFO_OVERFLOW = -801
const CS_STM_INVALID_TRANSFER_SIZE = -802
const CS_STM_COMPLETED = -803
const CS_STM_TRANSFER_TIMEOUT = -804
const CS_STM_OVERTOLTAGE = -805
const CS_STM_INVALID_BUFFER = -806
const CS_STM_TOTALDATA_SIZE_INVALID = -808
const CS_HISTOGRAM_FULL = -820
const CS_DDC_CORE_CONFIG_ERROR = -821
const CS_OCT_CORE_CONFIG_ERROR = -822
const CS_OCT_INVALID_CONFIG_PARAMS = -823
const CS_REMOTE_SOCKET_ERROR = -850
const CS_MISC_ERROR = -32767
const CsGetErrorString = CsGetErrorStringA
const uInt8 = UInt8
const uInt16 = UInt16
const uInt32 = UInt32
const int8 = Int8
const int16 = Int16
const int32 = Int32
const bool = UInt8
const cschar = UInt8
const CSHANDLE = uInt32
const PCSHANDLE = Ptr{CSHANDLE}
const RMHANDLE = uInt32
const PRMHANDLE = Ptr{RMHANDLE}
const DRVHANDLE = uInt32
const PDRVHANDLE = Ptr{DRVHANDLE}

@cenum _CSFILETYPES::UInt32 begin
    cftNone = 0
    cftBinaryData = 1
    cftSigFile = 2
    cftAscii = 3
end


const CsFileType = _CSFILETYPES

@cenum _CSFILEMODES::UInt32 begin
    cfmRead = 1
    cfmWrite = 2
    cfmReadWrite = 3
end


const CsFileMode = _CSFILEMODES

@cenum _CSFILEATTACH::UInt32 begin
    fmNew = 0
end


const CsFileAttach = _CSFILEATTACH

@cenum CsCaptureMode::UInt32 begin
    MemoryMode = 0
    StreamingMode = 1
end

@cenum CsDataPackMode::UInt32 begin
    DataUnpack = 0
    DataPacked_8 = 1
    DataPacked_12 = 2
end


const int64 = Clonglong
const uint64 = Culonglong
const real32 = Cfloat
const real64 = Cdouble
const EVENT_HANDLE = Ptr{Cvoid}
const SEM_HANDLE = Ptr{Cvoid}
const MUTEX_HANDLE = Ptr{Cvoid}
const FILE_HANDLE = Ptr{Cvoid}

struct CSBOARDINFO
    u32Size::uInt32
    u32BoardIndex::uInt32
    u32BoardType::uInt32
    strSerialNumber::NTuple{32, cschar}
    u32BaseBoardVersion::uInt32
    u32BaseBoardFirmwareVersion::uInt32
    u32AddonBoardVersion::uInt32
    u32AddonBoardFirmwareVersion::uInt32
    u32AddonFwOptions::uInt32
    u32BaseBoardFwOptions::uInt32
    u32AddonHwOptions::uInt32
    u32BaseBoardHwOptions::uInt32
end

const PCSBOARDINFO = Ptr{CSBOARDINFO}

struct ARRAY_BOARDINFO
    u32BoardCount::uInt32
    aBoardInfo::NTuple{1, CSBOARDINFO}
end

const PARRAY_BOARDINFO = Ptr{ARRAY_BOARDINFO}

struct CSSYSTEMINFO
    u32Size::uInt32
    i64MaxMemory::int64
    u32SampleBits::uInt32
    i32SampleResolution::int32
    u32SampleSize::uInt32
    i32SampleOffset::int32
    u32BoardType::uInt32
    strBoardName::NTuple{32, cschar}
    u32AddonOptions::uInt32
    u32BaseBoardOptions::uInt32
    u32TriggerMachineCount::uInt32
    u32ChannelCount::uInt32
    u32BoardCount::uInt32
end

const PCSSYSTEMINFO = Ptr{CSSYSTEMINFO}

struct CSACQUISITIONCONFIG
    u32Size::uInt32
    i64SampleRate::int64
    u32ExtClk::uInt32
    u32ExtClkSampleSkip::uInt32
    u32Mode::uInt32
    u32SampleBits::uInt32
    i32SampleRes::int32
    u32SampleSize::uInt32
    u32SegmentCount::uInt32
    i64Depth::int64
    i64SegmentSize::int64
    i64TriggerTimeout::int64
    u32TrigEnginesEn::uInt32
    i64TriggerDelay::int64
    i64TriggerHoldoff::int64
    i32SampleOffset::int32
    u32TimeStampConfig::uInt32
    i32SegmentCountHigh::int32
end

const PCSACQUISITIONCONFIG = Ptr{CSACQUISITIONCONFIG}

struct CSCHANNELCONFIG
    u32Size::uInt32
    u32ChannelIndex::uInt32
    u32Term::uInt32
    u32InputRange::uInt32
    u32Impedance::uInt32
    u32Filter::uInt32
    i32DcOffset::int32
    i32Calib::int32
end

const PCSCHANNELCONFIG = Ptr{CSCHANNELCONFIG}

struct ARRAY_CHANNELCONFIG
    u32ChannelCount::uInt32
    aChannel::NTuple{1, CSCHANNELCONFIG}
end

const PARRAY_CHANNELCONFIG = Ptr{ARRAY_CHANNELCONFIG}

struct CSTRIGGERCONFIG
    u32Size::uInt32
    u32TriggerIndex::uInt32
    u32Condition::uInt32
    i32Level::int32
    i32Source::int32
    u32ExtCoupling::uInt32
    u32ExtTriggerRange::uInt32
    u32ExtImpedance::uInt32
    i32Value1::int32
    i32Value2::int32
    u32Filter::uInt32
    u32Relation::uInt32
end

const PCSTRIGGERCONFIG = Ptr{CSTRIGGERCONFIG}

struct ARRAY_TRIGGERCONFIG
    u32TriggerCount::uInt32
    aTrigger::NTuple{1, CSTRIGGERCONFIG}
end

const PARRAY_TRIGGERCONFIG = Ptr{ARRAY_TRIGGERCONFIG}

struct CSSYSTEMCONFIG
    u32Size::uInt32
    pAcqCfg::PCSACQUISITIONCONFIG
    pAChannels::PARRAY_CHANNELCONFIG
    pATriggers::PARRAY_TRIGGERCONFIG
end

const PCSSYSTEMCONFIG = Ptr{CSSYSTEMCONFIG}

struct CSSAMPLERATETABLE
    i64SampleRate::int64
    strText::NTuple{32, cschar}
end

const PCSSAMPLERATETABLE = Ptr{CSSAMPLERATETABLE}

struct CSRANGETABLE
    u32InputRange::uInt32
    strText::NTuple{32, cschar}
    u32Reserved::uInt32
end

const PCSRANGETABLE = Ptr{CSRANGETABLE}

struct CSIMPEDANCETABLE
    u32Imdepdance::uInt32
    strText::NTuple{32, cschar}
    u32Reserved::uInt32
end

const PCSIMPEDANCETABLE = Ptr{CSIMPEDANCETABLE}

struct CSCOUPLINGTABLE
    u32Coupling::uInt32
    strText::NTuple{32, cschar}
    u32Reserved::uInt32
end

const PCSCOUPLINGTABLE = Ptr{CSCOUPLINGTABLE}

struct CSFILTERTABLE
    u32LowCutoff::uInt32
    u32HighCutoff::uInt32
end

const PCSFILTERTABLE = Ptr{CSFILTERTABLE}

struct IN_PARAMS_TRANSFERDATA
    u16Channel::uInt16
    u32Mode::uInt32
    u32Segment::uInt32
    i64StartAddress::int64
    i64Length::int64
    pDataBuffer::Ptr{Cvoid}
    hNotifyEvent::Ptr{HANDLE}
end

const PIN_PARAMS_TRANSFERDATA = Ptr{IN_PARAMS_TRANSFERDATA}

struct OUT_PARAMS_TRANSFERDATA
    i64ActualStart::int64
    i64ActualLength::int64
    i32LowPart::int32
    i32HighPart::int32
end

const POUT_PARAMS_TRANSFERDATA = Ptr{OUT_PARAMS_TRANSFERDATA}

struct IN_PARAMS_TRANSFERDATA_EX
    u16Channel::uInt16
    u32Mode::uInt32
    u32StartSegment::uInt32
    u32SegmentCount::uInt32
    i64StartAddress::int64
    i64Length::int64
    pDataBuffer::Ptr{Cvoid}
    i64BufferLength::int64
    hNotifyEvent::Ptr{HANDLE}
end

const PIN_PARAMS_TRANSFERDATA_EX = Ptr{IN_PARAMS_TRANSFERDATA_EX}

struct OUT_PARAMS_TRANSFERDATA_EX
    u32DataFormat0::uInt32
    u32DataFormat1::uInt32
end

const POUT_PARAMS_TRANSFERDATA_EX = Ptr{OUT_PARAMS_TRANSFERDATA_EX}

struct CALLBACK_DATA
    u32Size::uInt32
    hSystem::CSHANDLE
    u32ChannelIndex::uInt32
    i32Token::int32
end

const PCALLBACK_DATA = Ptr{CALLBACK_DATA}
const LPCsEventCallback = Ptr{Cvoid}

struct CSTIMESTAMP
    u16Hour::uInt16
    u16Minute::uInt16
    u16Second::uInt16
    u16Point1Second::uInt16
end

const PCSTIMESTAMP = Ptr{CSTIMESTAMP}

struct CSSIGSTRUCT
    u32Size::uInt32
    i64SampleRate::int64
    i64RecordStart::int64
    i64RecordLength::int64
    u32RecordCount::uInt32
    u32SampleBits::uInt32
    u32SampleSize::uInt32
    i32SampleOffset::int32
    i32SampleRes::int32
    u32Channel::uInt32
    u32InputRange::uInt32
    i32DcOffset::int32
    TimeStamp::CSTIMESTAMP
end

const PCSSIGSTRUCT = Ptr{CSSIGSTRUCT}

struct CSDISKFILEHEADER
    cData::NTuple{512, UInt8}
end

const PCSDISKFILEHEADER = Ptr{CSDISKFILEHEADER}

struct CSSEGMENTTAIL
    i64TimeStamp::int64
    i64Reserved0::int64
    i64Reserved1::int64
    i64Reserved2::int64
end

const PCSSEGMENTTAIL = Ptr{CSSEGMENTTAIL}

struct STREAMING_FILEHEADER
    u32Size::uInt32
    u32FileVersion::uInt32
    u32BlockSize::uInt32
    u32HeaderSize::uInt32
    i64DataSize::int64
    u32FooterSize::uInt32
    szBoardName::NTuple{32, UInt8}
    szSerialNumber::NTuple{32, UInt8}
    szUserDescription::NTuple{256, UInt8}
    u32Dataformat::uInt32
    u8NbOfChannels::uInt8
    u8NbOfTrigEn::uInt8
    AcqConfig::CSACQUISITIONCONFIG
end

const PSTREAMING_FILEHEADER = Ptr{STREAMING_FILEHEADER}

struct STMHEADER
    u32Size::uInt32
    u16CardIndex::uInt16
    u32NbOfChannels::uInt32
    u32NbOfTriggers::uInt32
    u32TailSize::uInt32
    u64StartSegment::Culonglong
    u64SegmentOffset::Culonglong
    u64StartPoint::Culonglong
    u64EndPoint::Culonglong
    CSystemInfo::CSSYSTEMINFO
    szDescription::NTuple{256, UInt8}
    CsAcqConfig::CSACQUISITIONCONFIG
end

const PSTMHEADER = Ptr{STMHEADER}

struct TRIGGERED_INFO_STRUCT
    u32Size::uInt32
    u32StartSegment::uInt32
    u32NumOfSegments::uInt32
    u32BufferSize::uInt32
    pBuffer::Ptr{int16}
end

const PTRIGGERED_INFO_STRUCT = Ptr{TRIGGERED_INFO_STRUCT}

struct CSPECONFIG
    u32Size::uInt32
    Enable::uInt32
    InputType::uInt32
    EncodeMode::uInt32
    Step::uInt32
    Offset::uInt32
end

const PCSPECONFIG = Ptr{CSPECONFIG}

struct CS_STRUCT_DATAFORMAT_INFO
    u32Size::uInt32
    u32Signed::uInt32
    u32Packed::uInt32
    u32SampleBits::uInt32
    u32SampleSize_Bits::uInt32
    i32SampleOffset::int32
    i32SampleRes::int32
end

const PCS_STRUCT_DATAFORMAT_INFO = Ptr{CS_STRUCT_DATAFORMAT_INFO}
